DELIMITER //
CREATE PROCEDURE GetFilteredJobs (
	IN WhereCondition NVARCHAR(10240),
	IN lastBusinessDateTime datetime,
	IN JobSearchString NVARCHAR(2048),
	IN FilteredBy NVARCHAR(100)
)
BEGIN
	
	IF (SELECT count(*) FROM usersearchfilter usf WHERE usf.UserId = FilteredBy) > 0 THEN
		BEGIN
			UPDATE usersearchfilter SET SearchedFilter = JobSearchString, SearchedOn = sysdate() WHERE UserId = FilteredBy;
		END;
	ELSE
		BEGIN
			INSERT INTO usersearchfilter (UserId, SearchedFilter, SearchedOn)
				VALUES (FilteredBy, JobSearchString, sysdate());
		END;
    END IF;
	
	SET group_concat_max_len = 2048;
	
	SET @query_as_string = CONCAT('SELECT JD.JobID, JD.JobTitle, JD.JobLocation, JD.JobType, JD.CompanyName, JD.PostedBy, JD.PostedDate, JD.JobURL, JD.RowInsertDate, JD.RowInsertBy, JD.RowUpdateDate, JD.RowUpdateBy, JD.JobSearchString, JD.jobURLSubstr, JD.Archive, (SELECT JS.JobStatus FROM jobsstatus JS where JS.JobID = JD.JobID) AS JobStatus, (SELECT GROUP_CONCAT(JS.AppliedBy ORDER BY JS.AppliedOn DESC SEPARATOR '', '') FROM jobsstatus JS where JS.JobID = JD.JobID) AS AppliedBy, (SELECT JS.AppliedOn FROM jobsstatus JS where JS.JobID = JD.JobID order by JS.AppliedOn desc LIMIT 1) AS AppliedOn FROM jobsdetails JD WHERE JD.RowInsertDate >= ', '' + lastBusinessDateTime + ' ', WhereCondition);
	
	PREPARE statement_1 FROM @query_as_string;
	EXECUTE statement_1;
	DEALLOCATE PREPARE statement_1;
END //
DELIMITER ;